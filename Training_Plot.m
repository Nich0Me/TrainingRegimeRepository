clear all
close all

blocked = load('Training_Blocked.mat');
interleaved = load('Training_Interleaved.mat');

%% GENERAL TRAINING
figure

% --- Blocked condition ---
errorbar([1,2],[mean(blocked.accBlock1), mean(blocked.accBlock2)], ...
    [std(blocked.accBlock1), std(blocked.accBlock2)] ./ sqrt(sum(blocked.Subspace==1 | blocked.Subspace==2)), ...
    'ok-', 'LineWidth', 2);
hold on

errorbar([3,4],[mean(blocked.accBlock3), mean(blocked.accBlock4)], ...
    [std(blocked.accBlock3), std(blocked.accBlock4)] ./ sqrt(sum(blocked.Subspace==1 | blocked.Subspace==2)), ...
    'ok-', 'LineWidth', 2);

% --- Interleaved condition ---
errorbar([1,2,3,4], ...
    [mean(interleaved.accBlock1), mean(interleaved.accBlock2), mean(interleaved.accBlock3), mean(interleaved.accBlock4)], ...
    [std(interleaved.accBlock1), std(interleaved.accBlock2), std(interleaved.accBlock3), std(interleaved.accBlock4)] ./ sqrt(sum(interleaved.Subspace==1 | interleaved.Subspace==2)), ...
    'ok--', 'LineWidth', 2);

xlim([0.5, 4.5])
xticks(1:4)
xticklabels({'Block 1','Block 2','Block 3','Block 4'})

xlabel('Training Block')
ylabel('Accuracy (%)')
title('General Training Effect')
legend({'Blocked', 'Interleaved'}, 'Location', 'best')
box off
set(gca, 'FontSize', 12)


%% SAME–DIFFERENT TRAINING
figure

% --- Blocked condition: Same structure (red solid) ---
errorbar([1,2], ...
    [mean(blocked.accBlock1(blocked.Subspace==1)), mean(blocked.accBlock2(blocked.Subspace==1))], ...
    [std(blocked.accBlock1(blocked.Subspace==1)), std(blocked.accBlock2(blocked.Subspace==1))] ./ sqrt(sum(blocked.Subspace==1)), ...
    'or-', 'LineWidth', 2);
hold on

% --- Blocked condition: Different structure (blue solid) ---
errorbar([1,2], ...
    [mean(blocked.accBlock1(blocked.Subspace==2)), mean(blocked.accBlock2(blocked.Subspace==2))], ...
    [std(blocked.accBlock1(blocked.Subspace==2)), std(blocked.accBlock2(blocked.Subspace==2))] ./ sqrt(sum(blocked.Subspace==2)), ...
    'ob-', 'LineWidth', 2);

% --- Blocked condition, later blocks ---
errorbar([3,4], ...
    [mean(blocked.accBlock3(blocked.Subspace==1)), mean(blocked.accBlock4(blocked.Subspace==1))], ...
    [std(blocked.accBlock3(blocked.Subspace==1)), std(blocked.accBlock4(blocked.Subspace==1))] ./ sqrt(sum(blocked.Subspace==1)), ...
    'or-', 'LineWidth', 2);
errorbar([3,4], ...
    [mean(blocked.accBlock3(blocked.Subspace==2)), mean(blocked.accBlock4(blocked.Subspace==2))], ...
    [std(blocked.accBlock3(blocked.Subspace==2)), std(blocked.accBlock4(blocked.Subspace==2))] ./ sqrt(sum(blocked.Subspace==2)), ...
    'ob-', 'LineWidth', 2);

% --- Interleaved condition: Same structure (red dashed) ---
errorbar([1,2,3,4], ...
    [mean(interleaved.accBlock1(interleaved.Subspace==1)), mean(interleaved.accBlock2(interleaved.Subspace==1)), ...
     mean(interleaved.accBlock3(interleaved.Subspace==1)), mean(interleaved.accBlock4(interleaved.Subspace==1))], ...
    [std(interleaved.accBlock1(interleaved.Subspace==1)), std(interleaved.accBlock2(interleaved.Subspace==1)), ...
     std(interleaved.accBlock3(interleaved.Subspace==1)), std(interleaved.accBlock4(interleaved.Subspace==1))] ./ sqrt(sum(interleaved.Subspace==1)), ...
    'or--', 'LineWidth', 2);

% --- Interleaved condition: Different structure (blue dashed) ---
errorbar([1,2,3,4], ...
    [mean(interleaved.accBlock1(interleaved.Subspace==2)), mean(interleaved.accBlock2(interleaved.Subspace==2)), ...
     mean(interleaved.accBlock3(interleaved.Subspace==2)), mean(interleaved.accBlock4(interleaved.Subspace==2))], ...
    [std(interleaved.accBlock1(interleaved.Subspace==2)), std(interleaved.accBlock2(interleaved.Subspace==2)), ...
     std(interleaved.accBlock3(interleaved.Subspace==2)), std(interleaved.accBlock4(interleaved.Subspace==2))] ./ sqrt(sum(interleaved.Subspace==2)), ...
    'ob--', 'LineWidth', 2);

% --- Formatting ---
xlim([0.5, 4.5])
xticks(1:4)
xticklabels({'Block 1','Block 2','Block 3','Block 4'})
xlabel('Training Block')
ylabel('Accuracy (%)')
title('Same–Different Training')
legend({'Blocked – Same structure','Blocked – Different structure', ...
        'Interleaved – Same structure','Interleaved – Different structure'}, ...
       'Location', 'best')
box off
set(gca, 'FontSize', 12)
%% BLOCKED SAME–DIFFERENT SECOND TASK

% Define participant index (assuming 119 participants)
participants = 1:119;

figure

% --- Conceptual task (participants > 60) ---
% Same structure (green solid)
errorbar([3,4], ...
    [mean(blocked.accBlock3(blocked.Subspace==1 & participants > 60)), ...
     mean(blocked.accBlock4(blocked.Subspace==1 & participants > 60))], ...
    [std(blocked.accBlock3(blocked.Subspace==1 & participants > 60)), ...
     std(blocked.accBlock4(blocked.Subspace==1 & participants > 60))] ./ sqrt(sum(blocked.Subspace==1)), ...
    'og-', 'LineWidth', 2);
hold on

% Different structure (green dashed)
errorbar([3,4], ...
    [mean(blocked.accBlock3(blocked.Subspace==2 & participants > 60)), ...
     mean(blocked.accBlock4(blocked.Subspace==2 & participants > 60))], ...
    [std(blocked.accBlock3(blocked.Subspace==2 & participants > 60)), ...
     std(blocked.accBlock4(blocked.Subspace==2 & participants > 60))] ./ sqrt(sum(blocked.Subspace==2)), ...
    'og--', 'LineWidth', 2);

% --- Spatial task (participants ≤ 60) ---
% Same structure (magenta solid)
errorbar([3,4], ...
    [mean(blocked.accBlock3(blocked.Subspace==1 & participants <= 60)), ...
     mean(blocked.accBlock4(blocked.Subspace==1 & participants <= 60))], ...
    [std(blocked.accBlock3(blocked.Subspace==1 & participants <= 60)), ...
     std(blocked.accBlock4(blocked.Subspace==1 & participants <= 60))] ./ sqrt(sum(blocked.Subspace==1)), ...
    'om-', 'LineWidth', 2);

% Different structure (magenta dashed)
errorbar([3,4], ...
    [mean(blocked.accBlock3(blocked.Subspace==2 & participants <= 60)), ...
     mean(blocked.accBlock4(blocked.Subspace==2 & participants <= 60))], ...
    [std(blocked.accBlock3(blocked.Subspace==2 & participants <= 60)), ...
     std(blocked.accBlock4(blocked.Subspace==2 & participants <= 60))] ./ sqrt(sum(blocked.Subspace==2)), ...
    'om--', 'LineWidth', 2);

% --- Formatting ---
xlim([2.5, 4.5])
xticks([3, 4])
xticklabels({'Block 3','Block 4'})
xlabel('Training Block')
ylabel('Accuracy (%)')
title('Blocked Same–Different: Second Task')
legend({'Same structure – Conceptual', 'Different structure – Conceptual', ...
        'Same structure – Spatial', 'Different structure – Spatial'}, ...
       'Location', 'best')
box off
set(gca, 'FontSize', 12)

% --- Statistical test (Conceptual condition only) ---
disp('Conceptual Condition: Same vs. Different Structure')
[h,p,~,d] = ttest2(blocked.AccuracyConceptual(blocked.Subspace==1 & participants < 61), ...
                   blocked.AccuracyConceptual(blocked.Subspace==2 & participants < 61));

%% Spatial Task Summary (Bar plot)
figure
bar([mean(blocked.AccuracySpatial(blocked.Subspace==1 & participants > 60)), ...
     mean(blocked.AccuracySpatial(blocked.Subspace==2 & participants > 60))])
hold on
errorbar([1,2], ...
    [mean(blocked.AccuracySpatial(blocked.Subspace==1 & participants > 60)), ...
     mean(blocked.AccuracySpatial(blocked.Subspace==2 & participants > 60))], ...
    [std(blocked.AccuracySpatial(blocked.Subspace==1 & participants > 60)) ./ sqrt(sum(blocked.Subspace==1)), ...
     std(blocked.AccuracySpatial(blocked.Subspace==2 & participants > 60)) ./ sqrt(sum(blocked.Subspace==2))], ...
    'k.', 'LineWidth', 1.5)

ylim([0.5, 0.85])
xticks([1 2])
xticklabels({'Same structure','Different structure'})
ylabel('Accuracy (%)')
title('Blocked Spatial Task Performance')
box off
set(gca, 'FontSize', 12)

